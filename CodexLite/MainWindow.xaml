<Window x:Class="CodexLite.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:CodexLite"
        mc:Ignorable="d"
        Title="MainWindow" Height="720" Width="1280" WindowStyle="None" 
        ResizeMode="CanMinimize" AllowsTransparency="True" Background="Transparent"
        MaxWidth="{StaticResource {x:Static SystemParameters.MaximizedPrimaryScreenWidthKey}}" 
        MaxHeight="{StaticResource {x:Static SystemParameters.MaximizedPrimaryScreenHeightKey}}">
    <Window.Resources>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" StrokeDashArray="1 2" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" StrokeThickness="1"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
        <Style x:Key="MenuButtonTemplate" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Height" Value="35"/>
            <Setter Property="Width" Value="35"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" Background="{TemplateBinding Background}" 
                                BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="{TemplateBinding BorderThickness}" 
                                CornerRadius="10"
                                SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" 
                                              Focusable="False" 
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                              Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" 
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="#79bbff"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="#79bbff"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="#a0cfff"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="#a0cfff"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="FocusVisual1">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" StrokeDashArray="1 2" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" StrokeThickness="1"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background1" Color="White"/>
        <SolidColorBrush x:Key="Button.Static.Border1" Color="White"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background1" Color="#409eff"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border1" Color="#409eff"/>
        <SolidColorBrush x:Key="Button.Pressed.Background1" Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border1" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground1" Color="#FF838383"/>
        <Style x:Key="TopBarButtonTemplate" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual1}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background1}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border1}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Width" Value="40" />
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" Background="Transparent" BorderBrush="Transparent" BorderThickness="0" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background1}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border1}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background1}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border1}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="#a0cfff"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="#a0cfff"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground1}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <Style x:Key="TopBarImage" TargetType="Image">
            <Setter Property="Width" Value="15"/>
            <Setter Property="Stretch" Value="Uniform"/>
        </Style>

        <Style x:Key="TopBarImageMaxAndRestore" TargetType="Image" BasedOn="{StaticResource TopBarImage}">
            <Style.Triggers>
                <DataTrigger Binding="{Binding WindowState, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}" Value="Maximized">
                    <Setter Property="Source" Value="/Assets/restore.png"></Setter>
                </DataTrigger>
                <DataTrigger Binding="{Binding WindowState, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}" Value="Normal">
                    <Setter Property="Source" Value="/Assets/maximize.png"></Setter>
                </DataTrigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>
    
    <Border Background="Transparent">
        <Border Background="#409EFF" CornerRadius="20" BorderThickness="0">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="70"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>

                <Grid Grid.Column="0">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="100" />
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>

                    <Grid Grid.Row="0">
                        <Button Style="{DynamicResource MenuButtonTemplate}" 
                                Background="Transparent" Height="45" Width="45"
                                Click="HomeButton_Click" Name="HomeButton">
                            <Button.Content>
                                <Image Source="/Assets/home.png" />
                            </Button.Content>
                        </Button>
                    </Grid>

                    <Grid Grid.Row="1">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="5" />
                            <RowDefinition Height="60" />
                            <RowDefinition Height="60" />
                            <RowDefinition Height="60" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>

                        <Button Style="{DynamicResource MenuButtonTemplate}" Grid.Row="1" Background="Transparent"
                                Click="TodoButton_Click" Name="TodoButton">
                            <Button.Content>
                                <Image Source="pack://application:,,,/Assets/todo.png" Stretch="Uniform" Width="25"/>
                            </Button.Content>
                        </Button>
                        <Button Style="{DynamicResource MenuButtonTemplate}" Grid.Row="2" Background="Transparent"
                                Click="FormatButton_Click" Name="FormatButton">
                            <Button.Content>
                                <Image Source="pack://application:,,,/Assets/formate.png" Stretch="Uniform" Width="25"/>
                            </Button.Content>
                        </Button>
                        <!-- <Button Style="{DynamicResource MenuButtonTemplate}" Grid.Row="3" Background="Transparent"> -->
                        <!--     <Button.Content> -->
                        <!--         <Image Source="pack://application:,,,/Assets/imagehosting.png" Stretch="Uniform" Width="25"/> -->
                        <!--     </Button.Content> -->
                        <!-- </Button> -->
                    </Grid>
                </Grid>
                <Border Grid.Column="1" Background="Transparent">
                    <Border Background="White" CornerRadius="20" BorderThickness="0">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="30"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            
                            <Border Background="#ecf5ff" CornerRadius="20 20 0 0"></Border>
                            <Grid Grid.Row="0">
                                
                                <Grid Background="Transparent" MouseLeftButtonDown="TopBarDrag_LeftDown">
                                    <TextBlock VerticalAlignment="Center"
                                               HorizontalAlignment="Center"
                                               FontSize="18">
                                        CodexLite
                                    </TextBlock>
                                </Grid>

                                <StackPanel Orientation="Horizontal" Width="auto"
                                            HorizontalAlignment="Right">
                                    <!--Github跳转-->
                                    <Button Style="{DynamicResource TopBarButtonTemplate}"
                                            Click="GithubBrowser_OnClick">
                                        <Button.Content>
                                            <Image Source="pack://application:,,,/Assets/github.png" Style="{StaticResource TopBarImage}"/>
                                        </Button.Content>
                                        <Button.Resources>
                                            <Style TargetType="{x:Type Border}">
                                                <Setter Property="CornerRadius" Value="0 0 0 20"/>
                                            </Style>
                                        </Button.Resources>
                                    </Button>
                                    
                                    <!--最小化-->
                                    <Button Style="{DynamicResource TopBarButtonTemplate}"
                                            Focusable="False"
                                            ToolTip="关闭"
                                            Click="TopBarMinimizeButton_Click">
                                        <Button.Content>
                                            <Image Source="/Assets/minimize.png" Style="{StaticResource TopBarImage}"/>
                                        </Button.Content>
                                    </Button>
                                    
                                    <!--最大化和还原-->
                                    <Button Style="{DynamicResource TopBarButtonTemplate}"
                                            Click="TopBarMaximize_Click">
                                        <Button.Content>
                                            <Image Source="/Assets/restore.png" Style="{DynamicResource TopBarImageMaxAndRestore}"/>
                                        </Button.Content>
                                    </Button>
                                    
                                    <!--关闭按钮-->
                                    <Button Style="{DynamicResource TopBarButtonTemplate}" 
                                            Click="TopBarCloseButton_Click"
                                            Focusable="False"
                                            ToolTip="关闭">
                                        <Button.Content>
                                            <Image Source="/Assets/close.png" Style="{StaticResource TopBarImage}"/>
                                        </Button.Content>
                                        <Button.Template>
                                            <ControlTemplate TargetType="{x:Type Button}">
                                                <Border x:Name="border" Background="Transparent" BorderBrush="Transparent" BorderThickness="0" 
                                                        SnapsToDevicePixels="true"
                                                        CornerRadius="0 20 0 0">
                                                    <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                </Border>
                                                 <ControlTemplate.Triggers> 
                                                     <Trigger Property="IsMouseOver" Value="True"> 
                                                         <Setter Property="Background" Value="#e81123" TargetName="border"></Setter> 
                                                         <Setter Property="BorderBrush" Value="#e81123" TargetName="border"></Setter> 
                                                     </Trigger> 
                                                     <Trigger Property="IsPressed" Value="True"> 
                                                         <Setter Property="Background" Value="#9b0b17" TargetName="border"></Setter> 
                                                         <Setter Property="BorderBrush" Value="#9b0b17" TargetName="border"></Setter> 
                                                     </Trigger> 
                                                 </ControlTemplate.Triggers> 
                                            </ControlTemplate>
                                        </Button.Template>
                                    </Button>
                                </StackPanel>
                                
                            </Grid>
                            
                            <Grid Grid.Row="1">
                                <Frame x:Name="Navi" NavigationUIVisibility="Hidden"/>
                            </Grid>
                            
                        </Grid>
                    </Border>
                </Border>
            </Grid>
        </Border>
    </Border>
</Window>
